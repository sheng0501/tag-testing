#!/bin/bash

intentionally-set-exit-code-to-non-zero-by-running-this-unrecognized-command
until [ $? -eq 0 ]; do
    git fetch --tags -p

    VERSION=$(git describe --tag --abbrev=0 --match *-rc*)
    DETAILED_VERSION=$(git describe --tag --match *-rc* --long)

    echo The most recent tag that is reachable by this commit is $VERSION

    read VERSION_MAJOR VERSION_PATCH <<< $(IFS="-rc"; echo $VERSION)
    NEW_VERSION=$VERSION_MAJOR-rc$(($VERSION_PATCH+1))

    echo The new tag will be $NEW_VERSION

    # check if the tag has been used already
    if [ $? -eq 0 ]
    then
        # if already used, then check the commit that is using it is a child of this commit.
        read NOT_NEEDED COMMIT <<< $(IFS='g'; echo $DETAILED_VERSION)
	CHILD_WITH_TAG=$(git log --reverse --ancestry-path HEAD^..master --format='%H' | grep $COMMIT)
        if [ -n "$CHILD_WITH_TAG" ]
        then
            # it a child does have this tag, then we do not need to tag this commit.
	   echo A child commit has already grabbed a tag, this commit will not get a tag
           exit 0
        fi
    fi

    git config --global user.email "luceoplatformintegrity@careerbuilder.com"
    git config --global user.name "Luceo Deployment"
    git tag -a $NEW_VERSION -m '' && git push origin $NEW_VERSION
done

